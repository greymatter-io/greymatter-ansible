---

# Create infrastructure
- hosts: localhost
  roles:
    - ansible-role-terraform
  vars:
    deploy_infrastructure: true
  tags: gm_infra

# Refresh inventory
- name: Refresh inventory
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Refresh inventory
      meta: refresh_inventory
  tags: gm_infra

# Run gm-control-api and create configs
- hosts: tag_Name_gm_control_api
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, create_rootCA: true, service: control-api }
    - ansible-role-control-api
    - ansible-role-gmcli
  tasks:
    - name: Create greymatter configs
      include_role:
        name: ansible-role-config
        apply:
          tags: gm_config
      vars:
        GLOBAL_SECRET_ENABLED_VALUES: [true, true, true, true, true, false, true]
        SERVICE_NAME_VALUES: [ 'control-api', 'internal-jwt-security', 'data-internal', 'catalog', 'slo', 'prometheus', 'dashboard' ]
        SERVICE_HOST_DNS_VALUES: [ 'gm_control_api.greymatter', 'gm_ijwt.greymatter', 'gm_idata.greymatter', 'gm_catalog.greymatter', 'gm_slo.greymatter', 'gm_prometheus.greymatter' ,'gm_dashboard.greymatter' ]
        CLUSTER_PORT_VALUES: [ 5555, 9443, 9080, 9080, 9080, 9090, 1337 ]
      tags: gm_config
  tags: gm_fabric

# Run gm-control
- hosts: tag_Name_gm_control
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: control }
    - ansible-role-control
  vars:
    config: "{{ lookup('file', '../group_vars/tf_ansible_vars_file.yml') | from_yaml }}"
    GM_CONTROL_AWS_VPC_ID: "{{ config.tf_vpc_id }}"
  tags: gm_fabric

# Run gm-control-api sidecar
- hosts: tag_Name_gm_control_api
  user: ubuntu
  become: yes
  roles:
  - { role: ansible-role-proxy, XDS_CLUSTER: control-api, XDS_HOST: gm_control.greymatter }
  tags: gm_fabric

# Run gm-edge
- hosts: tag_Name_gm_edge
  user: ubuntu
  become: yes
  roles:
  - ansible-role-preparatory
  - { role: ansible-role-certs, service: edge }
  - { role: ansible-role-proxy, XDS_CLUSTER: edge, XDS_HOST: gm_control.greymatter }
  tasks:
    - name: Create p12 cert
      command: openssl pkcs12 -export -out /etc/proxy/tls/sidecar/certificate.p12 -inkey /etc/proxy/tls/sidecar/edge.key -in /etc/proxy/tls/sidecar/edge.crt -certfile /etc/proxy/tls/sidecar/rootCA.crt -passin pass:pass -passout pass:pass

    - name: Download p12 cert
      fetch:
        src: "/etc/proxy/tls/sidecar/certificate.p12"
        dest: roles/ansible-role-dashboard/files/
        flat: yes
  tags: gm_edge

# Run internal jwt and its sidecar
- hosts: tag_Name_gm_ijwt
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: internal-jwt-security }
    - ansible-role-redis
    - ansible-role-internaljwt
    - ansible-role-proxy
  vars:
    XDS_CLUSTER: internal-jwt-security
    XDS_HOST: gm_control.greymatter
    CLIENT_JWT_ENDPOINT_PORT: 9443
    CLIENT_JWT_ENDPOINT_USE_TLS: true
    CLIENT_JWT_ENDPOINT_ADDRESS: 'localhost'
  tags: gm_ijwt

# Run gm-data and its sidecar
- hosts: tag_Name_gm_idata
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: data-internal }
    - ansible-role-incert
    - ansible-role-mongodb
    - { role: ansible-role-ijwt-secrets, fetch_ijwt_secret: yes}
    - { role: ansible-role-data, service: data-internal}
    - ansible-role-proxy
  vars:
    XDS_CLUSTER: data-internal
    XDS_HOST: gm_control.greymatter
  tags: gm_idata, gm_sense

# Run gm-catalog and its sidecar
- hosts: tag_Name_gm_catalog
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: catalog }
    - ansible-role-proxy
    - ansible-role-catalog
  vars:
    XDS_CLUSTER: catalog
    XDS_HOST: gm_control.greymatter
  tags: gm_catalog, gm_sense

# Run postgre-sql database
- hosts: tag_Name_gm_postgresql
  user: ubuntu
  become: yes
  roles:
    - ansible-role-postgres
  tags: gm_pg, gm_sense

# Run gm-slo and its sidecar
- hosts: tag_Name_gm_slo
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: slo }
    - ansible-role-slo
    - ansible-role-proxy
  vars:
    XDS_CLUSTER: slo
    XDS_HOST: gm_control.greymatter
  tags: gm_slo, gm_sense

# Run prometheus and its sidecar
- hosts: tag_Name_gm_prometheus
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: prometheus }
    - ansible-role-prometheus
    - ansible-role-proxy
  vars:
    prometheus_components: [ "prometheus"]
    prometheus_alertmanager_hostport: "localhost:9093"
    XDS_CLUSTER: prometheus
    XDS_HOST: gm_control.greymatter
  tags: gm_prometheus, gm_sense

# Run gm-dashboard and its sidecar
- hosts: tag_Name_gm_dashboard
  user: ubuntu
  become: yes
  roles:
    - ansible-role-preparatory
    - { role: ansible-role-certs, service: dashboard }
    - ansible-role-dashboard
    - ansible-role-proxy
  vars:
    XDS_CLUSTER: dashboard
    XDS_HOST: gm_control.greymatter
  tags: gm_dashboard, gm_sense

# Post catalog service configs
- hosts: tag_Name_gm_control_api
  user: ubuntu
  become: yes
  roles:
    - { role: ansible-role-catalog-service-config }
  vars:
    SERVICE_NAME_VALUES: [ 'control-api', 'internal-jwt-security', 'data-internal', 'catalog', 'slo', 'dashboard', 'edge' ]
  tags: gm_cc